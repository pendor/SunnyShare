server.port = 80
server.username = "www"
server.groupname = "www"

server.modules = ( 
	"mod_rewrite", 
	"mod_redirect", 
	"mod_cgi"
)

# force use of the "write" backend (closes: #2401)
server.tag = " "
server.network-backend = "write"
server.document-root = "/www/"
index-file.names = ( "index.html", "index.php" )

## mimetype mapping
mimetype.assign = (  
	".pdf"   => "application/pdf",
	".class" => "application/octet-stream",
	".pac"   => "application/x-ns-proxy-autoconfig",
	".swf"   => "application/x-shockwave-flash",
	".wav"   => "audio/x-wav",
	".gif"   => "image/gif",
	".jpg"   => "image/jpeg",
	".jpeg"  => "image/jpeg",
	".png"   => "image/png",
	".svg"   => "image/svg+xml",
	".css"   => "text/css",
	".html"  => "text/html",
	".htm"   => "text/html",
	".js"    => "text/javascript",
	".txt"   => "text/plain",
	".dtd"   => "text/xml",
	".xml"   => "text/xml"
 )

$HTTP["url"] =~ "\.pdf$" {
	server.range-requests = "disable"
}

$HTTP["url"] =~ "^/Shared($|/.*)" {
  dir-listing.activate = "enable"
  index-file.names = ( "/idxupload.php" )
}

static-file.exclude-extensions = ( ".php", ".pl", ".fcgi" )

server.error-handler-404 = "/error.html"
server.upload-dirs = ( "/mnt/data/tmp" )
cgi.assign = ( ".php"  => "/usr/bin/php-cgi" )

#### auth module
## read authentification.txt for more info
#auth.backend = "plain"
#auth.backend.plain.userfile = "lighttpd.user"
#auth.backend.plain.groupfile = "lighttpd.group"
#auth.require = (
#	"/server-status" => ( 
#		"method"  => "digest",
#		"realm"   => "download archiv",
#		"require" => "group=www|user=jan|host=192.168.2.10"
#	),
#	"/server-info" => ( 
#		"method"  => "digest",
#		"realm"   => "download archiv",
#		"require" => "group=www|user=jan|host=192.168.2.10"
#	)
#)

#### url handling modules (rewrite, redirect, access)
#url.rewrite = ( "^/$" => "/server-status" )
#url.redirect = ( "^/wishlist/(.+)" => "http://www.123.org/$1" )

#### both rewrite/redirect support back reference to regex conditional using %n
#$HTTP["host"] =~ "^www\.(.*)" {
#	url.redirect = ( "^/(.*)" => "http://%1/$1" )
#}
